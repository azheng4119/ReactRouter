{"version":3,"sources":["Components/AccountBalance.js","Components/Home.js","Components/UserProfile.js","Components/Login.js","Components/Credit.js","Components/DebitInput.js","Components/Card.js","Components/Debits.js","App.js","serviceWorker.js","index.js"],"names":["AccountBalance","react_default","a","createElement","this","props","accountBalance","debits","Component","Home","react_router_dom","to","Components_AccountBalance","UserProfile","userName","memberSince","Login","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","handleChange","e","updatedUser","objectSpread","state","user","inputField","target","name","inputValue","value","setState","handleSubmit","preventDefault","mockLogIn","redirect","password","react_router","onSubmit","htmlFor","type","onChange","Credit","onChangeAmount","event","new_transaction_amt","Number","onChangeItem","new_transaction_item","credit_transactions","main_div","display","flexDirection","flexWrap","justifyContent","entry_div","width","borderStyle","marginTop","addNewEntry","bind","assertThisInitialized","_this2","fetch","then","res","json","data","console","log","date_string","Date","toJSON","toString","new_entry","amount","date","description","id","length","prevState","component","style","map","item","toFixed","placeholder","onClick","DebitInput","handleChange2","addDebits","React","Card","class","Debits","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","i","push","src_Components_Card","err","return","Components_DebitInput","debitsTotal","App","logInInfo","newUser","currentUser","calucalteDebit","total","addNewDebit","amounts","joined","concat","now","newTotal","parseInt","componentDidMount","getDebits","credits","axios","get","response","result","catch","_this3","exact","path","render","Components_Login","assign","Components_Home","Components_UserProfile","src_Components_Debits","Components_Credit","Boolean","window","location","hostname","match","ReactDOM","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.36f86462.chunk.js","sourcesContent":["import React, {Component} from 'react';\r\n\r\nclass AccountBalance extends Component {\r\n  render() {\r\n    return (\r\n        <div>\r\n          Balance: {this.props.accountBalance} <br></br>\r\n          Debits: {this.props.debits} <br></br>\r\n        </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AccountBalance;","import React, { Component } from 'react';\r\nimport AccountBalance from './AccountBalance';\r\nimport {Link} from 'react-router-dom';\r\n\r\nclass Home extends Component{\r\n    render(){\r\n        return <div>\r\n            <Link to=\"/userProfile\">User Profile</Link><br></br>\r\n            <Link to=\"/\">Login</Link><br></br>\r\n            <Link to=\"/debits\">Debits</Link>\r\n            <h1>Home page</h1>\r\n            <AccountBalance accountBalance={this.props.accountBalance} debits = {this.props.debits}/>\r\n        </div>\r\n    }\r\n}\r\n\r\nexport default Home;","import React, {Component} from 'react';\r\nimport {Link} from 'react-router-dom';\r\n\r\nclass UserProfile extends Component {\r\n  render() {\r\n    return (\r\n        <div>\r\n            <Link to=\"/home\">Home</Link>\r\n            <h1>User Profile</h1>\r\n            <div>Username: {this.props.userName}</div>\r\n            <div>Member Since: {this.props.memberSince}</div>\r\n        </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default UserProfile;","import React, { Component } from 'react'\r\nimport { Redirect } from 'react-router-dom'\r\n\r\nclass Login extends Component {\r\n  constructor () {\r\n    super()\r\n    this.state = {\r\n      user: {\r\n        userName: '',\r\n        password: ''\r\n      },\r\n      redirect: false\r\n    }\r\n  }\r\n\r\n  handleChange = (e) => {\r\n    const updatedUser = {...this.state.user}\r\n    const inputField = e.target.name\r\n    const inputValue = e.target.value\r\n    updatedUser[inputField] = inputValue\r\n\r\n    this.setState({user: updatedUser})\r\n  }\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault()\r\n    this.props.mockLogIn(this.state.user)\r\n    this.setState({redirect: true})\r\n  }\r\n\r\n  render () {\r\n    if (this.state.redirect) {\r\n      return (<Redirect to=\"/userProfile\"/>)\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <h1>Login Page</h1>\r\n        <form onSubmit={this.handleSubmit}>\r\n          <div>\r\n            <label htmlFor=\"userName\">User Name</label><br></br>\r\n            <input type=\"text\" name=\"userName\" onChange={this.handleChange} value={this.state.user.userName} />\r\n          </div>\r\n          <div>\r\n            <label htmlFor=\"password\">Password</label><br></br>\r\n            <input type=\"password\" name=\"password\" />\r\n          </div>\r\n          <button>Log In</button>\r\n        </form>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Login","import React, { Component } from 'react'\r\n//import {Link} from 'react-router-dom'\r\n//import { regExpLiteral } from '@babel/types';\r\n\r\nclass Credit extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            credit_transactions: [],\r\n            new_transaction_amt: 0,\r\n            new_transaction_item: '',\r\n            main_div: {\r\n                display: \"flex\",\r\n                flexDirection: \"row\",\r\n                flexWrap: \"wrap\",\r\n                justifyContent: \"space-around\"\r\n            },\r\n            entry_div: {\r\n                width: \"22%\",\r\n                borderStyle: \"solid\",\r\n                marginTop: \"30px\"\r\n            }\r\n        }\r\n\r\n        this.addNewEntry = this.addNewEntry.bind(this)\r\n    }\r\n\r\n    componentDidMount() {\r\n        fetch(\"https://moj-api.herokuapp.com/credits\")\r\n        .then(res => res.json())\r\n        .then(data => this.setState({\r\n            credit_transactions: data\r\n        }))\r\n        .then(() => {\r\n            console.log(this.state.credit_transactions)\r\n        })\r\n    }\r\n\r\n    onChangeAmount = event => {\r\n        let value = event.target.value\r\n        this.setState({\r\n            new_transaction_amt: Number(value)\r\n        })\r\n    }\r\n\r\n    onChangeItem = event => {\r\n        let value = event.target.value\r\n        this.setState({\r\n            new_transaction_item: value\r\n        })\r\n    }\r\n\r\n    addNewEntry(event) {\r\n        event.preventDefault()\r\n        let component = this\r\n        let date = new Date()\r\n        let date_string = date.toJSON().toString()\r\n        let new_entry = {\r\n            amount: component.state.new_transaction_amt,\r\n            date: date_string,\r\n            description: component.state.new_transaction_item,\r\n            id: component.state.credit_transactions.length\r\n        }\r\n        this.setState(prevState => {\r\n            return(\r\n                prevState.credit_transactions[prevState.credit_transactions.length] = new_entry\r\n            )\r\n        })\r\n    }\r\n\r\n    render() {\r\n        let component = this\r\n        return (\r\n            <div>\r\n                <div style={this.state.main_div}>\r\n                    {this.state.credit_transactions.map(function(item) {\r\n                        return (\r\n                            <div style={component.state.entry_div}>\r\n                                <h3>${item.amount.toFixed(2)}</h3>\r\n                                <h3>{item.description}</h3>\r\n                                <h3>{item.date}</h3>\r\n                            </div>\r\n                        )\r\n                    })}\r\n                </div>\r\n\r\n                <div>\r\n                    <h2>Enter new purchase</h2>\r\n                    <form>\r\n                        <input type=\"number\" name=\"cred_charge\" placeholder=\"Enter an amount here\" onChange={this.onChangeAmount} />\r\n                        <input type=\"text\" name=\"cred_item\" placeholder=\"Enter what you purchased\" onChange={this.onChangeItem} />\r\n                        <button onClick={this.addNewEntry}>Submit</button>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default Credit","import React from 'react'\r\n\r\nclass DebitInput extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            name: \"Debit\" ,\r\n            amount: 0\r\n        }\r\n    }\r\n\r\n    handleChange = (event) =>{\r\n        this.setState({\r\n            name: event.target.value\r\n        })\r\n    }\r\n\r\n    handleChange2 = (event) => {\r\n        this.setState({\r\n            amount: event.target.value\r\n        })\r\n    }\r\n    handleSubmit = (e) => {\r\n        e.preventDefault()\r\n        this.props.addDebits(this.state.name, this.state.amount);\r\n    }\r\n\r\n    render(){\r\n        return <div>\r\n            <br></br>\r\n        <form onSubmit={this.handleSubmit}>\r\n          <div>\r\n            <label>Debit Name</label><br></br>\r\n            <input type=\"text\" onChange={this.handleChange} />\r\n          </div>\r\n          <div>\r\n            <label >Amount</label><br></br>\r\n            <input type = \"number\" onChange = {this.handleChange2}/>\r\n          </div>\r\n          <button>Add Debit</button>\r\n        </form>\r\n      </div>\r\n    }\r\n}\r\n\r\n\r\nexport default DebitInput;","import React from 'react';\r\nimport \"./Card.css\"\r\n\r\nclass Card extends React.Component {\r\n    render(){\r\n        return <ul class = \"card\">\r\n            <li>{this.props.name}</li>\r\n            <li>{this.props.amount}</li>\r\n            <li>{this.props.date}</li>\r\n        </ul>\r\n    }\r\n}\r\n\r\nexport default Card;","import React, { Component } from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport DebitInput from './DebitInput';\r\nimport Card from \"./Card\";\r\nimport \"./Debits.css\"\r\nclass Debits extends Component{\r\n    render(){\r\n        let debits = [];\r\n        for (let i of this.props.debits){\r\n            debits.push(\r\n            <Card name = {i.description} amount = {i.amount} date = {i.date}></Card>\r\n            );\r\n        }\r\n        return <div>\r\n                <Link to=\"/home\">Home</Link><br></br>\r\n                <DebitInput addDebits = {this.props.addDebits}></DebitInput>\r\n                <span><strong>Total Debits : {this.props.debitsTotal}</strong></span>\r\n                <div id = \"cards\">{debits}</div>\r\n        </div>\r\n    }\r\n}\r\n\r\nexport default Debits;","import React, {Component}  from 'react';\r\nimport {BrowserRouter as Router, Switch, Route} from 'react-router-dom';\r\nimport Home from './Components/Home';\r\nimport UserProfile from './Components/UserProfile';\r\nimport Login from './Components/Login'\r\nimport Credit from './Components/Credit'\r\nimport axios from 'axios'\r\nimport './App.css';\r\nimport Debits from './Components/Debits';\r\n\r\nclass App extends Component{\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      accountBalance: 14568.27,\r\n      currentUser: {\r\n        userName: 'Not Logged In',\r\n        memberSince: '08/23/99',\r\n      },\r\n      debitsTotal: 0,\r\n      debits: [],\r\n      credits: {}\r\n    }\r\n    this.getDebits = this.getDebits.bind(this);\r\n  }\r\n\r\n  mockLogIn = (logInInfo) => {\r\n    const newUser = {...this.state.currentUser}\r\n    newUser.userName = logInInfo.userName\r\n    this.setState({currentUser: newUser})\r\n  }\r\n\r\n  async getDebits(){\r\n    await axios.get('https://moj-api.herokuapp.com/debits')\r\n    .then(response =>{\r\n      let result = response.data;\r\n      this.setState({\r\n          debits : result\r\n      })\r\n    })\r\n    .catch(err => console.log(err));\r\n    this.calucalteDebit();\r\n  }\r\n\r\n  calucalteDebit = () => {\r\n    let total = 0;\r\n    for (let i of this.state.debits){\r\n      total += i.amount;\r\n    }\r\n    this.setState({\r\n      debitsTotal : total\r\n    })\r\n  }\r\n\r\n  addNewDebit = (name,amounts) => {\r\n    let joined = this.state.debits.concat([{\r\n      description : name,\r\n      amount: amounts,\r\n      date : Date.now()\r\n    }]);\r\n    let newTotal = this.state.debitsTotal + parseInt(amounts);\r\n    this.setState({\r\n      debits: joined,\r\n      debitsTotal: newTotal\r\n    });\r\n  }\r\n\r\n  componentDidMount = () =>{\r\n    this.getDebits();\r\n  }\r\n  render(){\r\n\r\n    const HomeComponent = () => (<Home accountBalance={this.state.accountBalance} debits={this.state.debitsTotal}/>);\r\n    const UserProfileComponent = () => (<UserProfile userName={this.state.currentUser.userName} memberSince={this.state.currentUser.memberSince}/>);\r\n    const LogInComponent = () => (<Login user={this.state.currentUser} mockLogIn={this.mockLogIn} {...this.props}/>);\r\n    const DebitComponent = () => (<Debits addDebits = {this.addNewDebit} debits={this.state.debits} debitsTotal = {this.state.debitsTotal}></Debits>);\r\n    let CreditInfo = () => (<Credit />)\r\n                            \r\n    return (<div id = \"App\">\r\n            <Router>\r\n                <Switch>\r\n                  <Route exact path = \"/\" render={LogInComponent}/>\r\n                  <Route exact path = \"/home\" render={HomeComponent}/>\r\n                  <Route exact path = \"/userProfile\" render={UserProfileComponent}/>\r\n                  <Route exact path = '/debits' render = {DebitComponent}/>\r\n                  <Route exact path=\"/credit\" render={CreditInfo} />\r\n                </Switch>\r\n            </Router>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}